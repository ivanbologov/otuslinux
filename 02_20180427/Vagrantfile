# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
	:otuslinux => {
		:box_name => "centos/7",
		:ip_addr => '192.168.11.102',
	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 250,
			:port => 1
		},
		:sata2 => {
			:dfile => './sata2.vdi',
			:size => 250, # Megabytes
			:port => 2
		},
		:sata3 => {
			:dfile => './sata3.vdi',
			:size => 250,
			:port => 3
		},
		:sata4 => {
			:dfile => './sata4.vdi',
			:size => 250, # Megabytes
			:port => 4
		},
		:sata5 => {
			:dfile => './sata5.vdi',
			:size => 250, # Megabytes
			:port => 5
		},
		:sata6 => {
			:dfile => './sata6.vdi',
			:size => 250, # Megabytes
			:port => 6
		}

	}
	},
}

Vagrant.configure("2") do |config| #1

	MACHINES.each do |boxname, boxconfig| #2

		config.vm.define boxname do |box| #3

			box.vm.box = boxconfig[:box_name]
			box.vm.host_name = boxname.to_s

			#box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

			box.vm.network "private_network", ip: boxconfig[:ip_addr]

			box.vm.provider :virtualbox do |vb| #4
				vb.customize ["modifyvm", :id, "--memory", "1024"]
								
				unless File.exist?("./sata1.vdi")
					vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
				end
				
				boxconfig[:disks].each do |dname, dconf| #5
					unless File.exist?(dconf[:dfile]) #6
						vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
					end #6
					vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]

				end #5
			end #4
			box.vm.provision "shell", inline: <<-SHELL
				mkdir -p ~root/.ssh
				cp ~vagrant/.ssh/auth* ~root/.ssh
				yum install -y mdadm smartmontools hdparm gdisk
				
# creating RAID50 on empty disks
# creating gpt labels for the first raid 5
parted -a optimal -s /dev/sdb mklabel gpt
parted -a optimal -s /dev/sdc mklabel gpt
parted -a optimal -s /dev/sdd mklabel gpt
# creating gpt labels for the second raid 5
parted -a optimal -s /dev/sde mklabel gpt
parted -a optimal -s /dev/sdf mklabel gpt
parted -a optimal -s /dev/sdg mklabel gpt
# killing partitions on disks
dd if=/dev/zero bs=512 count=1 of=/dev/sdb
dd if=/dev/zero bs=512 count=1 of=/dev/sdc
dd if=/dev/zero bs=512 count=1 of=/dev/sdd
dd if=/dev/zero bs=512 count=1 of=/dev/sde
dd if=/dev/zero bs=512 count=1 of=/dev/sdf
dd if=/dev/zero bs=512 count=1 of=/dev/sdg
# creating RAID5 arrays
mdadm --create /dev/md0 -l 5 -n 3 /dev/sdb /dev/sdc /dev/sdd
mdadm --create /dev/md1 -l 5 -n 3 /dev/sde /dev/sdf /dev/sdg
# creating RAID0 over RAID5 arrays
mdadm --create /dev/md2 -l 0 -n 2 /dev/md0 /dev/md1
# add fs to RAID50
mkfs.ext4 /dev/md2
# creating config 
mkdir /etc/mdadm
echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf
echo "$(blkid | grep /dev/md2 | awk '{print $2}') /mnt ext4 defaults 0 0" >> /etc/fstab
mount /mnt
#				
				
			SHELL

		end #3
	end #2
end #1

