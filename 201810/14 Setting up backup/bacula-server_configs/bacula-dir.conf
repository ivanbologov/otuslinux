# my bacula-dir.conf

# TODO
# replace address directive from name to ipv4 address

#  For Bacula release 9.2.2 (06 November 2018) -- redhat Enterprise release

# https://www.bacula.org/9.2.x-manuals/en/main/Configuring_Director.html


Director {                            # define myself
  Name = bacula-server-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/opt/bacula/scripts/query.sql"
  WorkingDirectory = "/opt/bacula/working"
  PidDirectory = "/opt/bacula/working"
  Maximum Concurrent Jobs = 20  # more than maximum number of Jobs that you wish to actually run
  Password = "S2p9EdFGo5IwsUlyWQTpsAhQqcLoKr51aF4Zi9qkGCMs"         # Console password
  Messages = Daemon  # where to deliver messages that are not associated with a specific Job
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = bacula-server-fd
  FileSet = "Full Set"
  Schedule = "WeeklyCycle"
  Storage = FileStorage
  Messages = Standard
  Pool = File
#  SpoolAttributes = yes
  Priority = 10
  Write Bootstrap = "/opt/bacula/working/%c_%n.bsr"  # not shure that this useful when not used tape
}

# you can disable automatic (via scheduler) execution of a job with 'enable = no' directive

#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /tmp
Job {
  Name = "BackupClient1"
  JobDefs = "DefaultJob"
}

Job {
  Name = "BackupOtusClient"
  JobDefs = "DefaultJob"
  #Client = otus-client-fd
  Client = bacula-client-fd
  File Set = "OtusSet"
  Schedule = "OtusSched"
}

#Job {
#  Name = "BackupClient2"
#  Client = bacula-server2-fd
#  JobDefs = "DefaultJob"
#}

#Job {
#  Name = "BackupClient1-to-Tape"
#  JobDefs = "DefaultJob"
#  Storage = LTO-4
#  Spool Data = yes    # Avoid shoe-shine
#  Pool = Default
#}

#}

# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/opt/bacula/scripts/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/opt/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/opt/bacula/working/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=bacula-server-fd
  Storage = FileStorage
# The FileSet and Pool directives are not used by Restore Jobs
# but must not be removed
  FileSet="Full Set"
  Pool = File
  Messages = Standard
  Where = /tmp/bacula-restores
}


# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
    }
#
#  Put your list of files here, preceded by 'File =', one per line
#    or include an external list with:
#
#    File = <file-name
#
#  Note: / backs up everything on the root partition.
#    if you have other partitions such as /usr or /home
#    you will probably want to add them too.
#
#  By default this is defined to point to the Bacula binary
#    directory to give a reasonable FileSet to backup to
#    disk storage during initial testing.
#
    File = /opt/bacula/bin
    File = /opt/bacula/etc
  }

#
# If you backup the root directory, the following two excluded
#   files can be useful
#
  Exclude {
    File = /opt/bacula/working
    File = /tmp
    File = /proc
    File = /tmp
    File = /sys
    File = /.journal
    File = /.fsck
  }
}

FileSet {
  Name = "OtusSet"
    Include {
      Options {
        signature = MD5
      }
      File = /etc
    }
}

#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

Schedule {
  Name = "OtusSched"
  # one time per day, no matter cause will triggered execution on any other backup
  Run = Level=Full daily at 0:00
  # Diff one time per half an hour
  Run = Level=Differential hourly at 0:05
  Run = Level=Differential hourly at 0:35
  # Inc one time per ten minute
  Run = Level=Incremental hourly at 0:15
  Run = Level=Incremental hourly at 0:25
  Run = Level=Incremental hourly at 0:45
  Run = Level=Incremental hourly at 0:55
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/opt/bacula/working/bacula.sql"
  }
}

# Client (File Services) to backup
Client {
  Name = bacula-server-fd
  Address = 192.168.11.114
  FDPort = 9102
  Catalog = MyCatalog
  Password = "Gk2ykQckp0qR37v1FE42ebSPkZNKA4HunLf5eEc6b2qN"          # password for FileDaemon
  File Retention = 60 days            # 60 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

Client {
  #Name = otus-client-fd
  Name = bacula-client-fd
  Address = 192.168.11.214
  FDPort = 9102
  Catalog = MyCatalog
  #Password = "Q9OCA0rjHRNnBw+A8RtYCNMRT8LhMCTxEO4pIlt2eqC8"          # password for FileDaemon
  Password = "Q9OCA0rjHRNnBw+A8RtYCNMRT8LhMCTxEO4pIlt2eqC8"
  File Retention = 3 days
  Job Retention = 1 week 
  AutoPrune = yes                     # Prune expired Jobs/Files
}

#
# Second Client (File Services) to backup
#  You should change Name, Address, and Password before using
#
#Client {
#  Name = bacula-server2-fd
#  Address = bacula-server2
#  FDPort = 9102
#  Catalog = MyCatalog
#  Password = "Gk2ykQckp0qR37v1FE42ebSPkZNKA4HunLf5eEc6b2qN2"        # password for FileDaemon 2
#  File Retention = 60 days           # 60 days
#  Job Retention = 6 months           # six months
#  AutoPrune = yes                    # Prune expired Jobs/Files
#}


Storage {
  Name = FileStorage
# enable = no  # it's possible to disable storage
  Address = 192.168.11.114                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "r+TKsU7LYyzJf9X6sgFRN6cseOhoBn/36wPwi1Z9gO1D"   # password for StorageDaemon
  Device = FileStorage  # same name as in bacula-sd.conf Device resource name directive
  Media Type = File  # same as in -sd.conf should be uniq name
  
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula"; dbuser = "bacula"; dbpassword = "v3rrYY_Very$tr0nG-PasS"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root@localhost = all, !skipped
  operator = root@localhost = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/opt/bacula/log/bacula.log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped
  console = all, !skipped, !saved
  append = "/opt/bacula/log/bacula.log" = all, !skipped
}

# Default pool definition
#Pool {
#  Name = Default
#  Pool Type = Backup
#  Recycle = yes                       # Bacula can automatically recycle Volumes
#  AutoPrune = yes                     # Prune expired volumes
#  Volume Retention = 365 days         # one year
#  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
#  Maximum Volumes = 100               # Limit number of Volumes in Pool
#}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 1G          # Limit Volume size to something reasonable
  Maximum Volumes = 10               # Limit number of Volumes in Pool
  Label Format = "Vol-"               # Auto label
}


# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = bacula-server-mon
  Password = "NPe/7AyUzIbZfDtKPJ55JlgHca80oD6/Qxj58/fX8MtC"
  CommandACL = status, .status
}
