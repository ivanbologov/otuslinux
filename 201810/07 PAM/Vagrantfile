# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.117'
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1024"]
          end

          box.vm.provision "shell", inline: <<-SHELL
			mkdir -p ~root/.ssh
			# TODO before start put your ssh pub key to the target vagrant folder
			# adding my ssh pub key to the root
			cat /vagrant/ivan.bologov.key.pub >> ~vagrant/.ssh/auth*
			cp ~vagrant/.ssh/auth* ~root/.ssh
			# push hometask to the home dir
			#cp -R /vagrant/hometask05 ~vagrant/
			#chown -R vagrant:vagrant ~vagrant/hometask05
			#chmod -R +x ~vagrant/hometask05
			ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime
			systemctl start chronyd.service
		    systemctl enable chronyd.service
			# installing pam_script
			yum install -y epel-release
			yum -y install pam_script
			# cause of authconfig could drop any changes of system-auth, could create the copy of cource simlink and recreate simlink
			# PROBLEM, provisioner not created symlink, but it's changes nothing for this lab
			#cp /etc/pam.d/system-auth-ac /etc/pam.d/system-auth-loc
			#rm -f /etc/pam.d/system-auth
			#ln -s /etc/pam.d/system-auth-loc /etc/pam.d/system-auth
			# adding pam_script to system-auth before pam_unix.so
			sed -i '5a\ auth        required      pam_script.so' /etc/pam.d/system-auth
			# adding script disallowing anyone, except admin group, login at weekend and holidays
			# if script not in folder /etc/pam-script.d/ and not owned by root it's not invoked
			cp /vagrant/no_holiday_login.sh /etc/pam-script.d/
			chown root:root /etc/pam-script.d/no_holiday_login.sh
			chmod 755 /etc/pam-script.d/no_holiday_login.sh
			ln -s /etc/pam-script.d/no_holiday_login.sh /etc/pam-script.d/pam_script_auth
			# adding test users
			chmod a+x /vagrant/create_test_users.sh
			/vagrant/create_test_users.sh
			# adding capabilities config 
			# not working special word all, added nothing to current caps
			#echo "all user5" > /etc/security/capability.conf
			echo "cap_sys_admin user5" > /etc/security/capability.conf
			#echo "cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,35,36 user5" > /etc/security/capability.conf
			# adding pam_cap for user5
			sed -i '6a\ auth [default=1 success=ignore] pam_succeed_if.so uid = 1005' /etc/pam.d/system-auth
			sed -i '7a\ auth        optional      pam_cap.so' /etc/pam.d/system-auth
		  SHELL
      end
  end
end